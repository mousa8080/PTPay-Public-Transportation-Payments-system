# Generated by Django 5.1.7 on 2025-04-28 21:49

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Governorate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Transfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sender_phone",
                    models.CharField(
                        max_length=11,
                        validators=[
                            django.core.validators.MinLengthValidator(11),
                            django.core.validators.RegexValidator("^\\d{11}$"),
                        ],
                    ),
                ),
                (
                    "receiver_phone",
                    models.CharField(
                        max_length=11,
                        validators=[
                            django.core.validators.MinLengthValidator(11),
                            django.core.validators.RegexValidator("^\\d{11}$"),
                        ],
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "uid",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "national_id",
                    models.CharField(
                        max_length=14,
                        unique=True,
                        validators=[
                            django.core.validators.MinLengthValidator(14),
                            django.core.validators.RegexValidator("^\\d{14}$"),
                        ],
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=11,
                        unique=True,
                        validators=[
                            django.core.validators.MinLengthValidator(11),
                            django.core.validators.RegexValidator("^\\d{11}$"),
                        ],
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[\\w.+-]+@gmail\\.com$"
                            )
                        ],
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        max_length=128,
                        validators=[django.core.validators.MinLengthValidator(8)],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="payments.city",
                    ),
                ),
                (
                    "governorate",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="payments.governorate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomerWallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallet",
                        to="payments.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeviceLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="payments.device",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Driver",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "national_id",
                    models.CharField(
                        max_length=14,
                        unique=True,
                        validators=[
                            django.core.validators.MinLengthValidator(14),
                            django.core.validators.RegexValidator("^\\d{14}$"),
                        ],
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=11,
                        unique=True,
                        validators=[
                            django.core.validators.MinLengthValidator(11),
                            django.core.validators.RegexValidator("^\\d{11}$"),
                        ],
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[\\w.+-]+@gmail\\.com$"
                            )
                        ],
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        max_length=128,
                        validators=[django.core.validators.MinLengthValidator(8)],
                    ),
                ),
                ("license_number", models.CharField(max_length=50, unique=True)),
                (
                    "driver_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="drivers/photos/"
                    ),
                ),
                (
                    "license_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="drivers/licenses/"
                    ),
                ),
                ("in_zone", models.BooleanField(default=False)),
                (
                    "assigned_device",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="driver",
                        to="payments.device",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="payments.city",
                    ),
                ),
                (
                    "governorate",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="payments.governorate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DriverWallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "pending_balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "driver",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallet",
                        to="payments.driver",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="city",
            name="governorate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="payments.governorate",
            ),
        ),
        migrations.CreateModel(
            name="NFCCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(max_length=100, unique=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nfc_cards",
                        to="payments.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Route",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "start_stop_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("start_latitude", models.FloatField(blank=True, null=True)),
                ("start_longitude", models.FloatField(blank=True, null=True)),
                (
                    "end_stop_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("end_latitude", models.FloatField(blank=True, null=True)),
                ("end_longitude", models.FloatField(blank=True, null=True)),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="routes",
                        to="payments.city",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="driver",
            name="assigned_route",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="drivers",
                to="payments.route",
            ),
        ),
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                ("sequence_number", models.PositiveIntegerField()),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("in_zone", models.BooleanField(default=False)),
                ("qr_token", models.CharField(blank=True, max_length=32)),
                ("qr_token_generated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to="payments.driver",
                    ),
                ),
                (
                    "route",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to="payments.route",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fare",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "new_balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("nfc", "NFC Card"),
                            ("qr", "QR"),
                            ("cash", "Cash"),
                            ("unk", "Unknown"),
                        ],
                        default="unk",
                        max_length=4,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payments.customer",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payments.trip",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.CharField(max_length=50, unique=True)),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to="payments.driver",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="trip",
            name="vehicle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="trips",
                to="payments.vehicle",
            ),
        ),
    ]
